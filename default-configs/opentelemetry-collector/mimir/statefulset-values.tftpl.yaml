image:
  repository: "otel/opentelemetry-collector-k8s"

mode: statefulset

config:
  extensions:
    k8s_observer:
      observe_pods: true
  receivers:
    prometheus:
      config:
        scrape_configs:
          - job_name: pulsar-components
            kubernetes_sd_configs:
                - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app]
                action: keep
                regex: "pulsar"
              - source_labels: [__meta_kubernetes_pod_label_cluster]
                action: keep
                regex: "pulsar"
              - source_labels: [__meta_kubernetes_pod_label_component]
                action: keep
                regex: "zookeeper|bookkeeper|broker"
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: "true"
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                target_label: __address__
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                action: replace
                regex: (http|https)
                target_label: __scheme__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_label_component]
                action: replace
                target_label: job
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: instance
              - source_labels: [__meta_kubernetes_pod_label_component]
                action: replace
                target_label: application
          - job_name: streamx
            kubernetes_sd_configs:
                - role: pod
            metrics_path: /q/metrics
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_managed_by]
                action: keep
                regex: "streamx-delivery-controller|streamx-processing-controller|streamx-ingestion-controller"
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
                action: keep
                regex: "delivery|processing|ingestion"
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
                action: replace
                target_label: job
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: instance
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
                action: replace
                target_label: application
    jaeger: null
    otlp: null
    zipkin: null
  exporters:
    otlphttp/metrics:
      endpoint: http://${ metrics_otlphttp_endpoint }
      tls:
        insecure: true
  service:
    extensions:
      - k8s_observer
      - health_check
    pipelines:
      traces: null
      metrics:
        receivers:
          - prometheus
        exporters:
          - otlphttp/metrics
      logs: null

service:
  enabled: false

ports:
  otlp:
    enabled: false
  otlp-http:
    enabled: false
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false

clusterRole:
  create: true
  rules:
    - apiGroups:
        - ''
      resources:
        - 'pods'
      verbs:
        - 'get'
        - 'list'
        - 'watch'